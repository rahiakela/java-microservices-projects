<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.6.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.restaurant.service</groupId>
	<artifactId>otrs-restaurant-service</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>otrs-restaurant-service</name>
	<description>OTRS Microservices with Spring Boot and Spring Cloud</description>

	<properties>
		<start-class>com.restaurant.service.RestaurantServiceApplication</start-class>
    	<docker.registry.name>localhost:5000/</docker.registry.name>
    	<docker.repository.name>${docker.registry.name}sourabhh/${project.artifactId}</docker.repository.name>
    	<docker.host.address>192.168.43.194</docker.host.address>
    	<docker.port>8080</docker.port>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
		
			<plugin>
				<groupId>org.jolokia</groupId>
        		<artifactId>docker-maven-plugin</artifactId>
        		<version>0.13.9</version>
        		<configuration>
        			<images>
        				<image>
        					<name>${docker.repository.name}:${project.version}</name>
        					<alias>${project.artifactId}</alias>
        					
        					<build>
        						<from>openjdk:11-jre</from>
        						<maintainer>Rahi Akela</maintainer>
        						<assembly>
        							<descriptor>docker-assembly.xml</descriptor>
        						</assembly>
        						<ports>
        							<port>${docker.port}</port>
        						</ports>
        						<cmd>
        							<shell>java -Dspring.profiles.active="docker" -jar /maven/${project.build.finalName}.jar server /maven/docker-config.yml</shell>
        						</cmd>
        					</build>
        					<run>
        						<namingStrategy>alias</namingStrategy>
        						<ports>
        							<port>${docker.port}:8080</port>
        						</ports>
        						<volumes>
        							<bind>
        								<volume>${user.home}/logs:/logs</volume>
        							</bind>
        						</volumes>
        						<wait>
        							<http>
        								<url>http://${docker.host.address}:${docker.port}/v1/restaurants/1</url>
        							</http>
        							<time>500000</time>
        						</wait>
        						<log>
        							<prefix>${project.artifactId}</prefix>
        							<color>cyan</color>
        						</log>
        					</run>
        				</image>
        			</images>
        		</configuration>
			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
        		<artifactId>maven-failsafe-plugin</artifactId>
        		<configuration>
        			<phase>integration-test</phase>
        			<groups>com.restaurant.service.docker.DockerIT</groups>
        			<systemPropertyVariables>
        				<service.url>http://${docker.host.address}:${docker.port}</service.url>
        			</systemPropertyVariables>
        		</configuration>
        		<executions>
        			<execution>
        				<goals>
        					<goal>integration-test</goal>
        					<goal>verify</goal>
        				</goals>
        			</execution>
        		</executions>
			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
        		<artifactId>maven-surefire-plugin</artifactId>
        		<configuration>
        			<excludedGroups>com.restaurant.service.docker.DockerIT</excludedGroups>
        		</configuration>
			</plugin>
			
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>
